services:
  backend:
    build: ./backend
    container_name: shareandrent_backend
    ports:
      - "5005:5005"
    volumes:
      - ./backend:/app
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/shareandrentdb
      - JWT_SECRET_KEY=your-super-secret-key # Измените на свой ключ!
      - REFRESH_JWT_SECRET_KEY=your-super-secret-refresh-key # Измените на свой ключ!
      - REDIS_URL=redis://redis:6379/0
      - MINIO_URL=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=shareandrent-bucket
    depends_on:
      - postgres
      - redis
      - minio
    command: ["flask", "run", "--host=0.0.0.0", "--port=5005"] # Используем встроенный сервер Flask для разработки

  postgres:
    image: postgres:15
    container_name: shareandrent_postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shareandrentdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: shareandrent_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio:RELEASE.2023-05-04T21-44-30Z # Используйте актуальный тэг
    container_name: shareandrent_minio
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_REGION: us-east-1
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  prometheus:
    image: prom/prometheus:v2.45.0 # Используйте актуальный тэг
    container_name: shareandrent_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana-oss:9.5.1 # Используйте актуальный тэг
    container_name: shareandrent_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data: